{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Fashion Intel This is the documentation for our solution to Flipkart Grid 2.0 This documentation contains the explanation of the components used and demos The trained model weights are hosted on GCP. Run the download_models.sh to use them Project Layout fashion_intel apis: All the APIs for ML models used by the application cloth_detector: Training and inference codes for the cloth detector fashion2vec: Training and inference codes fashion2vec pytorch_cnn_trainer: The CNN trainer we built to train our models (Tagger, Fashion2Vec) ranker: The ranking algorithms code tagger: Training and inference codes for fashion tagger react_app The code files for our frontend application scraper_scripts The webscrapper scripts","title":"Home"},{"location":"#fashion-intel","text":"This is the documentation for our solution to Flipkart Grid 2.0 This documentation contains the explanation of the components used and demos The trained model weights are hosted on GCP. Run the download_models.sh to use them","title":"Fashion Intel"},{"location":"#project-layout","text":"fashion_intel apis: All the APIs for ML models used by the application cloth_detector: Training and inference codes for the cloth detector fashion2vec: Training and inference codes fashion2vec pytorch_cnn_trainer: The CNN trainer we built to train our models (Tagger, Fashion2Vec) ranker: The ranking algorithms code tagger: Training and inference codes for fashion tagger react_app The code files for our frontend application scraper_scripts The webscrapper scripts","title":"Project Layout"},{"location":"fashion2vec/","text":"Fashion2Vec Overview Fashion2Vec is essentially a CNN (in our case ResNet) which is trained using supervised contrastive learning method this allows the CNN to generate very accurate feature representations of the fashion Images Dataset We used DeepFashion Attribute prediction dataset. This dataset had about 280,000 images belonging to 5000 classes, each class had its own unique fashion style Training Triplet Sampling We sampled triplets from this dataset to give as input to image The triplets contained - An anchor image from a class - A positive image which belongs to same class as anchor image - A negative image which belongs to a different class Loss We used the triplet margin loss available in PyTorch Method Each image is individually passed through the CNN, note that for each triplet, the CNN has same weight The embeddings after the last GlobalAveragePooling layer is taken and triplet loss is computed for triplets Scope For Improvement We could use quadruplet loss, which has soft positive and hard positive, the semantics of the class names can be used to identify soft positive and hard positive classes","title":"Fashion2Vec"},{"location":"fashion2vec/#fashion2vec","text":"","title":"Fashion2Vec"},{"location":"fashion2vec/#overview","text":"Fashion2Vec is essentially a CNN (in our case ResNet) which is trained using supervised contrastive learning method this allows the CNN to generate very accurate feature representations of the fashion Images","title":"Overview"},{"location":"fashion2vec/#dataset","text":"We used DeepFashion Attribute prediction dataset. This dataset had about 280,000 images belonging to 5000 classes, each class had its own unique fashion style","title":"Dataset"},{"location":"fashion2vec/#training","text":"","title":"Training"},{"location":"fashion2vec/#triplet-sampling","text":"We sampled triplets from this dataset to give as input to image The triplets contained - An anchor image from a class - A positive image which belongs to same class as anchor image - A negative image which belongs to a different class","title":"Triplet Sampling"},{"location":"fashion2vec/#loss","text":"We used the triplet margin loss available in PyTorch","title":"Loss"},{"location":"fashion2vec/#method","text":"Each image is individually passed through the CNN, note that for each triplet, the CNN has same weight The embeddings after the last GlobalAveragePooling layer is taken and triplet loss is computed for triplets","title":"Method"},{"location":"fashion2vec/#scope-for-improvement","text":"We could use quadruplet loss, which has soft positive and hard positive, the semantics of the class names can be used to identify soft positive and hard positive classes","title":"Scope For Improvement"},{"location":"ranking/","text":"Fashion Ranking Overview The fashion trend can be analyzed in two ways - From supervised data from e-commerce sites - unsupervised data from catalogues and social media Hence we have two ranking algorithms for these two cases Unsupervised Fashion Ranking We developed a graph based ranking algorithm to get a score for each fashion image This algorithm can identify communities of nodes in a graph based on the edges connecting them. How it works The Fashion2Vec vectors of each fashion image is used to build a fully connected graph In this graph each node is an image The weight of each edge between two images is the similarity of the two images (we use euclidean distance) We then use a variation of PageRank algorithm to assign a score to each node This score is then normalized to be range of 0-100 This algorithm is somewhat similar to Spectral clustering, instead we use an algorithm to assign score to each image Unlike clustering where all the images in a cluster will get similar score, in this approach each image is given a score by comparing it with everyother image. Supervised Ranking Algorithm The data from e-commerce sites are a good indicator of what sells, moreover the data is labelled. However the ratings by themselves arent a true measure of the products performance, and its not straightforward to compare the ratings of products from different sites To overcome this we developed a formula to give a very accurate estimate of the product's true rating. The score from our formula is agnostic of the e-commerce site from where it was taken, hence products from different e-commerce sites can be compared on a level field.","title":"Fashion Ranking"},{"location":"ranking/#fashion-ranking","text":"","title":"Fashion Ranking"},{"location":"ranking/#overview","text":"The fashion trend can be analyzed in two ways - From supervised data from e-commerce sites - unsupervised data from catalogues and social media Hence we have two ranking algorithms for these two cases","title":"Overview"},{"location":"ranking/#unsupervised-fashion-ranking","text":"We developed a graph based ranking algorithm to get a score for each fashion image This algorithm can identify communities of nodes in a graph based on the edges connecting them.","title":"Unsupervised Fashion Ranking"},{"location":"ranking/#how-it-works","text":"The Fashion2Vec vectors of each fashion image is used to build a fully connected graph In this graph each node is an image The weight of each edge between two images is the similarity of the two images (we use euclidean distance) We then use a variation of PageRank algorithm to assign a score to each node This score is then normalized to be range of 0-100 This algorithm is somewhat similar to Spectral clustering, instead we use an algorithm to assign score to each image Unlike clustering where all the images in a cluster will get similar score, in this approach each image is given a score by comparing it with everyother image.","title":"How it works"},{"location":"ranking/#supervised-ranking-algorithm","text":"The data from e-commerce sites are a good indicator of what sells, moreover the data is labelled. However the ratings by themselves arent a true measure of the products performance, and its not straightforward to compare the ratings of products from different sites To overcome this we developed a formula to give a very accurate estimate of the product's true rating. The score from our formula is agnostic of the e-commerce site from where it was taken, hence products from different e-commerce sites can be compared on a level field.","title":"Supervised Ranking Algorithm"},{"location":"tagging/","text":"Fashion Tagging Overview Visual features are enough for the models to identify trend and rank them. However they are not interpretable. We developed a fashion tagging model which can tag images with fashion attributes, there are about 1000 tags in the training dataset we used Tagging can help the user interpret the results of the ranking algorithm much better Dashboards can be made where highly ranked fashion images and their corresponding tags can be used to give insightful plots Moreover these tags can also be used for textual search, where the user can search whether a particular fashion is in trend by using words. Dataset We used DeepFashion Attribute prediction dataset. This dataset had about 280,000 images belonging to 5000 classes, each class had its own unique fashion style Training Model We used ResNet model as the backbone, the last layer was a 1000 units linear layer with sigmoid activation function. Loss We used the cross entropy loss Scope For Improvement We can make make an end-to-end model with bbox regressor and attribute classifier to improve the accuracy of the model.","title":"Fashion Tagging"},{"location":"tagging/#fashion-tagging","text":"","title":"Fashion Tagging"},{"location":"tagging/#overview","text":"Visual features are enough for the models to identify trend and rank them. However they are not interpretable. We developed a fashion tagging model which can tag images with fashion attributes, there are about 1000 tags in the training dataset we used Tagging can help the user interpret the results of the ranking algorithm much better Dashboards can be made where highly ranked fashion images and their corresponding tags can be used to give insightful plots Moreover these tags can also be used for textual search, where the user can search whether a particular fashion is in trend by using words.","title":"Overview"},{"location":"tagging/#dataset","text":"We used DeepFashion Attribute prediction dataset. This dataset had about 280,000 images belonging to 5000 classes, each class had its own unique fashion style","title":"Dataset"},{"location":"tagging/#training","text":"","title":"Training"},{"location":"tagging/#model","text":"We used ResNet model as the backbone, the last layer was a 1000 units linear layer with sigmoid activation function.","title":"Model"},{"location":"tagging/#loss","text":"We used the cross entropy loss","title":"Loss"},{"location":"tagging/#scope-for-improvement","text":"We can make make an end-to-end model with bbox regressor and attribute classifier to improve the accuracy of the model.","title":"Scope For Improvement"},{"location":"visualsearch/","text":"Fashion Search Engine Overview The vectors generated by Fashion2Vec needs to be indexed and efficiently searched so that they can be used for Fashion Reccomendation and Image searching FAISS We used Facebook AI Similarity Search to implement this Visual Search Engine, the vectors are indexed and stored. This index can be used to query similar vectors. The similarity index used in this project is Euclidean Distance Reccomendation Engine Our reccomendation engine uses these indexes to show the user similar fashion items and their ranks when they click on any particular image. This aids the user in Fashion Discovery Scope For Improvement There are many highly scalable vector similarity search engines available , for example Milvus is one such engine we wanted to use. It internally uses FAISS but is highly optimized and scalable.","title":"Fashion Search Engine"},{"location":"visualsearch/#fashion-search-engine","text":"","title":"Fashion Search Engine"},{"location":"visualsearch/#overview","text":"The vectors generated by Fashion2Vec needs to be indexed and efficiently searched so that they can be used for Fashion Reccomendation and Image searching","title":"Overview"},{"location":"visualsearch/#faiss","text":"We used Facebook AI Similarity Search to implement this Visual Search Engine, the vectors are indexed and stored. This index can be used to query similar vectors. The similarity index used in this project is Euclidean Distance","title":"FAISS"},{"location":"visualsearch/#reccomendation-engine","text":"Our reccomendation engine uses these indexes to show the user similar fashion items and their ranks when they click on any particular image. This aids the user in Fashion Discovery","title":"Reccomendation Engine"},{"location":"visualsearch/#scope-for-improvement","text":"There are many highly scalable vector similarity search engines available , for example Milvus is one such engine we wanted to use. It internally uses FAISS but is highly optimized and scalable.","title":"Scope For Improvement"}]}